name: PR Discord Notification

on:
  pull_request:
    types: [opened, synchronize, closed]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      # PR 성공 알림
      - name: Discord Notification on Success (PR)
        if: success() && github.event_name == 'pull_request' && github.event.action == 'opened'
        uses: discord-actions/message@v2
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          message: |
            ✅ **Backend CI Passed!**
            **Event:** Pull Request (Opened)
            **Repository:** ${{ github.repository }}
            **PR 제목:** ${{ github.event.pull_request.title }}
            **작성자:** ${{ github.event.pull_request.user.login }}
            **PR 링크:** ${{ github.event.pull_request.html_url }}

      # PR 실패 알림
      - name: Discord Notification on Failure (PR)
        if: failure() && github.event_name == 'pull_request' && github.event.action == 'opened'
        uses: discord-actions/message@v2
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          message: |
            ❌ **Backend CI Failed!**
            **Event:** Pull Request (Opened)
            **Repository:** ${{ github.repository }}
            **PR 제목:** ${{ github.event.pull_request.title }}
            **작성자:** ${{ github.event.pull_request.user.login }}
            **PR 링크:** ${{ github.event.pull_request.html_url }}
            📄 [테스트 리포트 확인하기](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

      # Push 성공 알림
      - name: Discord Notification on Success (Push)
        if: success() && github.event_name == 'push'
        uses: discord-actions/message@v2
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          message: |
            ✅ **Backend CI Passed!**
            **Event:** Push
            **Repository:** ${{ github.repository }}
            **브랜치:** ${{ github.ref }}
            **커밋:** [${{ github.event.head_commit.message }}](${{ github.event.head_commit.url }})
            **푸셔:** ${{ github.event.pusher.name }}

      # Push 실패 알림
      - name: Discord Notification on Failure (Push)
        if: failure() && github.event_name == 'push'
        uses: discord-actions/message@v2
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          message: |
            ❌ **Backend CI Failed!**
            **Event:** Push
            **Repository:** ${{ github.repository }}
            **브랜치:** ${{ github.ref }}
            **커밋:** [${{ github.event.head_commit.message }}](${{ github.event.head_commit.url }})
            **푸셔:** ${{ github.event.pusher.name }}
            📄 [테스트 리포트 확인하기](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

      # PR Merge 성공 알림
      - name: Discord Notification on PR Merge
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
        uses: discord-actions/message@v2
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          message: |
            🎉 **Pull Request Merged!**
            **Repository:** ${{ github.repository }}
            **PR 제목:** ${{ github.event.pull_request.title }}
            **머지한 사람:** ${{ github.event.pull_request.merged_by.login }}
            **PR 링크:** ${{ github.event.pull_request.html_url }}
            **Merge Commit:** [${{ github.event.pull_request.merge_commit_sha }}](https://github.com/${{ github.repository }}/commit/${{ github.event.pull_request.merge_commit_sha }})
